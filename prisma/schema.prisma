// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Post {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([name])
}

model Project {
  project_id String            @id @unique @default(uuid())
  createdAt  DateTime          @default(now())
  published  Boolean           @default(false)
  title      String            @default("title")
  status     Status            @default(NOTSTART)
  owner      Owner             @default(ETC)
  students   Project_Student[]
  parcels    Parcel_Project[]
}

model Student {
  student_id String            @id @unique @default(uuid())
  name       String            @default("")
  email      String            @unique
  line_id    String            @unique
  department Department
  isAdmin    Boolean           @default(false)
  project    Project_Student[]
}

model Project_Student {
  id         String  @id @unique @default(uuid())
  student_id String
  project_id String
  student    Student @relation(fields: [student_id], references: [student_id])
  project    Project @relation(fields: [project_id], references: [project_id])
}

model Parcel {
  parcel_id   String           @id @unique @default(uuid())
  title       String           @default("")
  description String?
  amount      Int              @default(1)
  available   Boolean          @default(true)
  unit        String           @default("ชิ้น")
  image_url   String
  type        PARCEL_TYPE
  group       PARCEL_GROUP
  department  Department?
  project     Parcel_Project[]
}

model Parcel_Project {
  id                String           @id @unique @default(uuid())
  createdAt         DateTime         @default(now())
  parcel_id         String
  project_id        String
  description_admin String           @default("")
  image_url         String           @default("")
  amount            Int              @default(0)
  description       String           @default("")
  status            BORROWING_STATUS @default(PENDING)
  project           Project          @relation(fields: [project_id], references: [project_id])
  parcel            Parcel           @relation(fields: [parcel_id], references: [parcel_id])
  startDate         DateTime         @default(now())
  endDate           DateTime         @default(now())
}

enum BORROWING_STATUS {
  PENDING
  BORROWING
  INUSE
  RETURN
  REJECT
}

enum PARCEL_TYPE {
  NORMAL
  DURABLE
  KEY
}

enum PARCEL_GROUP {
  OFFICE
  ELECTRONIC
  HOME
  BUILDING
  FUEL
  MEDICAL_SCI
  ADS
  MUSICAL
  CLOTHING
  COMPUTER
}

enum Department {
  SMO
  MATHCOM
  MARINE
  CHEM
  CHEMTECH
  BIO
  BIOCHEM
  BSAC
  BBTECH
  FOODTECH
  MATSCI
  PHYSICS
  BOTGEN
  MICROBIO
  PHOTO
  GEO
  ENVI
  NISIT_OFFICER
}

enum Status {
  NOTSTART
  INPROGRESS
  EVALUATE
  COMPLETE
}

enum Owner {
  PRESSIDENT
  VICE1
  VICE2
  SECRETARY
  TRASURER
  STUDENT_RELATION
  ARTS
  ACADEMIC
  SPORT
  SOCIAL_DEVELOPMENT
  KORKOR_CLUB
  SCIREN_CLUB
  VATA_CLUB
  EDUCATION_CLUB
  ANURAK_CLUB
  ASA_CLUB
  ETC
}
